import 'dart:io';
import 'dart:typed_data';
import 'package:flutter/material.dart';
import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart' as pw;
import 'package:path_provider/path_provider.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:open_file/open_file.dart';
import 'package:intl/intl.dart';
import '../models/tenant.dart';
import '../models/room.dart';

class ReceiptService {
  static const String _receiptTemplate = '''
RECEIPT
TENANT VISION APP
Property Management System

Date: {date}
Receipt No: {receiptNumber}

Tenant Information:
Name: {tenantName}
Property: {propertyName}
Room: Room {roomNumber}
Phone: {phone}
Email: {email}

Payment Details:
Amount: TZS {amount}
Payment Date: {paymentDate}
Payment Method: Cash
Notes: {notes}

Thank you for your payment!

Generated by Tenant Vision App
''';

  /// Generates a PDF receipt for a payment
  static Future<String?> generateReceipt({
    required Payment payment,
    required Tenant tenant,
    required Room room,
    required String propertyName,
  }) async {
    try {
      // Request storage permission
      final permission = await Permission.storage.request();
      if (!permission.isGranted) {
        throw Exception('Storage permission denied');
      }

      // Create PDF document
      final pdf = pw.Document();
      
      // Add receipt content
      pdf.addPage(
        pw.Page(
          pageFormat: PdfPageFormat.a4,
          build: (pw.Context context) {
            return pw.Column(
              crossAxisAlignment: pw.CrossAxisAlignment.start,
              children: [
                // Header
                pw.Container(
                  width: double.infinity,
                  padding: const pw.EdgeInsets.all(20),
                  decoration: pw.BoxDecoration(
                    color: PdfColors.blue50,
                    border: pw.Border.all(color: PdfColors.blue200),
                  ),
                  child: pw.Column(
                    children: [
                      pw.Text(
                        'RECEIPT',
                        style: pw.TextStyle(
                          fontSize: 24,
                          fontWeight: pw.FontWeight.bold,
                          color: PdfColors.blue800,
                        ),
                      ),
                      pw.SizedBox(height: 8),
                      pw.Text(
                        'TENANT VISION APP',
                        style: pw.TextStyle(
                          fontSize: 16,
                          fontWeight: pw.FontWeight.bold,
                          color: PdfColors.blue700,
                        ),
                      ),
                      pw.Text(
                        'Property Management System',
                        style: pw.TextStyle(
                          fontSize: 12,
                          color: PdfColors.blue600,
                        ),
                      ),
                    ],
                  ),
                ),
                
                pw.SizedBox(height: 20),
                
                // Receipt details
                pw.Container(
                  padding: const pw.EdgeInsets.all(20),
                  child: pw.Column(
                    crossAxisAlignment: pw.CrossAxisAlignment.start,
                    children: [
                      // Receipt number and date
                      pw.Row(
                        mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
                        children: [
                          pw.Text(
                            'Receipt No: ${payment.id}',
                            style: pw.TextStyle(fontSize: 12, fontWeight: pw.FontWeight.bold),
                          ),
                          pw.Text(
                            'Date: ${DateFormat('MMM dd, yyyy').format(DateTime.now())}',
                            style: pw.TextStyle(fontSize: 12),
                          ),
                        ],
                      ),
                      
                      pw.SizedBox(height: 20),
                      
                      // Tenant information
                      pw.Text(
                        'Tenant Information:',
                        style: pw.TextStyle(fontSize: 14, fontWeight: pw.FontWeight.bold),
                      ),
                      pw.SizedBox(height: 8),
                      pw.Text('Name: ${tenant.fullName}'),
                      pw.Text('Property: $propertyName'),
                      pw.Text('Room: Room ${room.roomNumber}'),
                      if (tenant.phone != null) pw.Text('Phone: ${tenant.phone}'),
                      if (tenant.email != null) pw.Text('Email: ${tenant.email}'),
                      
                      pw.SizedBox(height: 20),
                      
                      // Payment details
                      pw.Text(
                        'Payment Details:',
                        style: pw.TextStyle(fontSize: 14, fontWeight: pw.FontWeight.bold),
                      ),
                      pw.SizedBox(height: 8),
                      pw.Text('Amount: TZS ${NumberFormat('#,##0').format(payment.amount)}'),
                      pw.Text('Payment Date: ${DateFormat('MMM dd, yyyy').format(payment.date)}'),
                      pw.Text('Payment Method: Cash'),
                      if (payment.notes != null && payment.notes!.isNotEmpty)
                        pw.Text('Notes: ${payment.notes}'),
                      
                      pw.SizedBox(height: 30),
                      
                      // Footer
                      pw.Center(
                        child: pw.Column(
                          children: [
                            pw.Text(
                              'Thank you for your payment!',
                              style: pw.TextStyle(fontSize: 14, fontWeight: pw.FontWeight.bold),
                            ),
                            pw.SizedBox(height: 10),
                            pw.Text(
                              'Generated by Tenant Vision App',
                              style: pw.TextStyle(fontSize: 10, color: PdfColors.grey600),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            );
          },
        ),
      );

      // Get downloads directory
      final directory = await getDownloadsDirectory();
      if (directory == null) {
        throw Exception('Could not access downloads directory');
      }

      // Generate filename
      final fileName = 'receipt_${payment.id}_${DateFormat('yyyyMMdd_HHmmss').format(DateTime.now())}.pdf';
      final file = File('${directory.path}/$fileName');

      // Save PDF
      await file.writeAsBytes(await pdf.save());

      return file.path;
    } catch (e) {
      debugPrint('Error generating receipt: $e');
      return null;
    }
  }

  /// Downloads and opens a receipt
  static Future<bool> downloadReceipt({
    required Payment payment,
    required Tenant tenant,
    required Room room,
    required String propertyName,
  }) async {
    try {
      final filePath = await generateReceipt(
        payment: payment,
        tenant: tenant,
        room: room,
        propertyName: propertyName,
      );

      if (filePath != null) {
        // Open the file
        final result = await OpenFile.open(filePath);
        return result.type == ResultType.done;
      }
      
      return false;
    } catch (e) {
      debugPrint('Error downloading receipt: $e');
      return false;
    }
  }

  /// Generates a simple text receipt (fallback if PDF fails)
  static String generateTextReceipt({
    required Payment payment,
    required Tenant tenant,
    required Room room,
    required String propertyName,
  }) {
    return '''
RECEIPT
TENANT VISION APP
Property Management System

Date: ${DateFormat('MMM dd, yyyy').format(DateTime.now())}
Receipt No: ${payment.id}

Tenant Information:
Name: ${tenant.fullName}
Property: $propertyName
Room: Room ${room.roomNumber}
${tenant.phone != null ? 'Phone: ${tenant.phone}' : ''}
${tenant.email != null ? 'Email: ${tenant.email}' : ''}

Payment Details:
Amount: TZS ${NumberFormat('#,##0').format(payment.amount)}
Payment Date: ${DateFormat('MMM dd, yyyy').format(payment.date)}
Payment Method: Cash
${payment.notes != null && payment.notes!.isNotEmpty ? 'Notes: ${payment.notes}' : ''}

Thank you for your payment!

Generated by Tenant Vision App
''';
  }

  /// Saves a text receipt to downloads folder
  static Future<String?> saveTextReceipt({
    required Payment payment,
    required Tenant tenant,
    required Room room,
    required String propertyName,
  }) async {
    try {
      final directory = await getDownloadsDirectory();
      if (directory == null) {
        throw Exception('Could not access downloads directory');
      }

      final fileName = 'receipt_${payment.id}_${DateFormat('yyyyMMdd_HHmmss').format(DateTime.now())}.txt';
      final file = File('${directory.path}/$fileName');

      final receiptText = generateTextReceipt(
        payment: payment,
        tenant: tenant,
        room: room,
        propertyName: propertyName,
      );

      await file.writeAsString(receiptText);
      return file.path;
    } catch (e) {
      debugPrint('Error saving text receipt: $e');
      return null;
    }
  }
}
